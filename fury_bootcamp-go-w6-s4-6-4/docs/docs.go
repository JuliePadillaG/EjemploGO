// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://developers.mercadolibre.com.ar/es_ar/terminos-y-condiciones",
        "contact": {
            "name": "API Support",
            "url": "https://developers.mercadolibre.com.ar/support"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/carries": {
            "post": {
                "description": "create a carry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carries"
                ],
                "summary": "Create a carry",
                "parameters": [
                    {
                        "description": "Carry",
                        "name": "carry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Carry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/localities": {
            "post": {
                "description": "create locality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Localities"
                ],
                "summary": "Create locality",
                "parameters": [
                    {
                        "description": "Locality",
                        "name": "locality",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Locality"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/localities/reportCarries": {
            "get": {
                "description": "get locality report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Localities"
                ],
                "summary": "Get locality report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Locality id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },

        "/api/v1/productbatches": {
            "post": {
                "description": "create product_batches",

        "/api/v1/productRecords": {
            "post": {
                "description": "create a product record",

                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [

                    "Product_batches"
                ],
                "summary": "Create product batches",
                "parameters": [
                    {
                        "description": "product_batches",
                        "name": "product_batches",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Product_batches"

                    "Product Records"
                ],
                "summary": "Create a product record",
                "parameters": [
                    {
                        "description": "ProductRecords",
                        "name": "carry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ProductRecords"

                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },

        "/api/v1/reportProducts/": {
            "get": {
                "description": "get report product",

        "/api/v1/products": {
            "get": {
                "description": "get products",

                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [

                    "ReportProduct"
                ],
                "summary": "Get ReportProduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "BatchNumber ID to get report (optional)",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/sections": {
            "get": {
                "description": "get all sections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Get all sections",

                    "Products"
                ],
                "summary": "List products",

                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {

                "description": "create section",

                "description": "create a product",

                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [

                    "Sections"
                ],
                "summary": "Create section",
                "parameters": [
                    {
                        "description": "Section",
                        "name": "section",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Section"

                    "Products"
                ],
                "summary": "Create a product",
                "parameters": [
                    {
                        "description": "Product",
                        "name": "carry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Product"

                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },

        "/api/v1/sections/:id": {
            "get": {
                "description": "get one section",

        "/api/v1/products/:id": {
            "get": {
                "description": "get product by ID",

                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [

                    "Sections"
                ],
                "summary": "Get section",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Section ID",

                    "Products"
                ],
                "summary": "List one product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",

                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {

                "description": "delete section",

                "description": "delete product",

                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [

                    "Sections"
                ],
                "summary": "Delete section",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Section ID",

                    "Products"
                ],
                "summary": "Delete product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",

                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {

                        "description": "No Content"

                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }

                    }
                }
            },
            "patch": {

                "description": "update section",

                "description": "update product",

                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [

                    "Sections"
                ],
                "summary": "Update section",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Section ID",

                    "Products"
                ],
                "summary": "Update product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",

                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },

        "/api/v1/products/reportRecords": {
            "get": {
                "description": "get report records",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get report records",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },

        "/api/v1/warehouses": {
            "get": {
                "description": "get warehouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "List warehouses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {
                "description": "create warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Create warehouse",
                "parameters": [
                    {
                        "description": "Warehouse",
                        "name": "warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Warehouse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/warehouses/:id": {
            "get": {
                "description": "get product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "List one warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Delete warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "update warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Update warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Carry": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cid": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "locality_id": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "domain.Locality": {
            "type": "object",
            "properties": {
                "country_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "locality_name": {
                    "type": "string"
                },
                "province_name": {
                    "type": "string"
                }
            }
        },

        "domain.Product_batches": {
            "type": "object",
            "properties": {
                "current_quantity": {
                    "type": "integer"
                },
                "current_temperature": {
                    "type": "integer"
                },
                "due_date": {
                    "type": "string"

        "domain.Product": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expiration_rate": {
                    "type": "integer"
                },
                "freezing_rate": {
                    "type": "integer"
                },
                "height": {
                    "type": "number"

                },
                "id": {
                    "type": "integer"
                },

                "initial_quantity": {
                    "type": "integer"
                },
                "manufacturing_date": {
                    "type": "string"
                },
                "manufacturing_hour": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "section_id": {
                    "type": "integer"
                },
                "section_number": {
                    "type": "integer"
                }
            }
        },
        "domain.Section": {
            "type": "object",
            "properties": {
                "current_capacity": {
                    "type": "integer"
                },
                "current_temperature": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "maximum_capacity": {
                    "type": "integer"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "product_type_id": {
                    "type": "integer"
                },
                "section_number": {
                    "type": "integer"
                },
                "warehouse_id": {
                    "type": "integer"

                "length": {
                    "type": "number"
                },
                "netweight": {
                    "type": "number"
                },
                "product_code": {
                    "type": "string"
                },
                "product_type_id": {
                    "type": "integer"
                },
                "recommended_freezing_temperature": {
                    "type": "number"
                },
                "seller_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "domain.ProductRecords": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "last_update_date": {
                    "type": "string"
                },
                "products_id": {
                    "type": "integer"
                },
                "purchase_price": {
                    "type": "number"
                },
                "sale_price": {
                    "type": "number"

                }
            }
        },
        "domain.Warehouse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                },
                "warehouse_code": {
                    "type": "string"
                }
            }
        },
        "web.response": {
            "type": "object",
            "properties": {
                "data": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "MELI Bootcamp API",
	Description:      "This API Handle MELI Products.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
